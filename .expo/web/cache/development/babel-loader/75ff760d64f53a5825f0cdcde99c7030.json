{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Animated = _interopRequireDefault(require(\"../../../exports/Animated\"));\n\nvar _I18nManager = _interopRequireDefault(require(\"../../../exports/I18nManager\"));\n\nvar _PanResponder = _interopRequireDefault(require(\"../../../exports/PanResponder\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"../../../exports/StyleSheet\"));\n\nvar _reactTimerMixin = _interopRequireDefault(require(\"react-timer-mixin\"));\n\nvar _View = _interopRequireDefault(require(\"../../../exports/View\"));\n\nvar _createReactClass = _interopRequireDefault(require(\"create-react-class\"));\n\nvar _emptyFunction = _interopRequireDefault(require(\"fbjs/lib/emptyFunction\"));\n\nvar isRTL = function isRTL() {\n  return _I18nManager.default.isRTL;\n};\n\nvar CLOSED_LEFT_POSITION = 0;\nvar HORIZONTAL_SWIPE_DISTANCE_THRESHOLD = 10;\nvar HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD = 0.3;\nvar SLOW_SPEED_SWIPE_FACTOR = 4;\nvar SWIPE_DURATION = 300;\nvar ON_MOUNT_BOUNCE_DELAY = 700;\nvar ON_MOUNT_BOUNCE_DURATION = 400;\nvar RIGHT_SWIPE_BOUNCE_BACK_DISTANCE = 30;\nvar RIGHT_SWIPE_BOUNCE_BACK_DURATION = 300;\nvar RIGHT_SWIPE_THRESHOLD = 30 * SLOW_SPEED_SWIPE_FACTOR;\nvar SwipeableRow = (0, _createReactClass.default)({\n  displayName: 'SwipeableRow',\n  _panResponder: {},\n  _previousLeft: CLOSED_LEFT_POSITION,\n  mixins: [_reactTimerMixin.default],\n  propTypes: {\n    children: _propTypes.default.any,\n    isOpen: _propTypes.default.bool,\n    preventSwipeRight: _propTypes.default.bool,\n    maxSwipeDistance: _propTypes.default.number.isRequired,\n    onOpen: _propTypes.default.func.isRequired,\n    onClose: _propTypes.default.func.isRequired,\n    onSwipeEnd: _propTypes.default.func.isRequired,\n    onSwipeStart: _propTypes.default.func.isRequired,\n    shouldBounceOnMount: _propTypes.default.bool,\n    slideoutView: _propTypes.default.node.isRequired,\n    swipeThreshold: _propTypes.default.number.isRequired\n  },\n  getInitialState: function getInitialState() {\n    return {\n      currentLeft: new _Animated.default.Value(this._previousLeft),\n      isSwipeableViewRendered: false,\n      rowHeight: null\n    };\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      isOpen: false,\n      preventSwipeRight: false,\n      maxSwipeDistance: 0,\n      onOpen: _emptyFunction.default,\n      onClose: _emptyFunction.default,\n      onSwipeEnd: _emptyFunction.default,\n      onSwipeStart: _emptyFunction.default,\n      swipeThreshold: 30\n    };\n  },\n  UNSAFE_componentWillMount: function UNSAFE_componentWillMount() {\n    this._panResponder = _PanResponder.default.create({\n      onMoveShouldSetPanResponderCapture: this._handleMoveShouldSetPanResponderCapture,\n      onPanResponderGrant: this._handlePanResponderGrant,\n      onPanResponderMove: this._handlePanResponderMove,\n      onPanResponderRelease: this._handlePanResponderEnd,\n      onPanResponderTerminationRequest: this._onPanResponderTerminationRequest,\n      onPanResponderTerminate: this._handlePanResponderEnd,\n      onShouldBlockNativeResponder: function onShouldBlockNativeResponder(event, gestureState) {\n        return false;\n      }\n    });\n  },\n  componentDidMount: function componentDidMount() {\n    var _this = this;\n\n    if (this.props.shouldBounceOnMount) {\n      this.setTimeout(function () {\n        _this._animateBounceBack(ON_MOUNT_BOUNCE_DURATION);\n      }, ON_MOUNT_BOUNCE_DELAY);\n    }\n  },\n  UNSAFE_componentWillReceiveProps: function UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.isOpen && !nextProps.isOpen) {\n      this._animateToClosedPosition();\n    }\n  },\n  render: function render() {\n    var slideOutView;\n\n    if (this.state.isSwipeableViewRendered && this.state.rowHeight) {\n      slideOutView = _react.default.createElement(_View.default, {\n        style: [styles.slideOutContainer, {\n          height: this.state.rowHeight\n        }]\n      }, this.props.slideoutView);\n    }\n\n    var swipeableView = _react.default.createElement(_Animated.default.View, {\n      onLayout: this._onSwipeableViewLayout,\n      style: {\n        transform: [{\n          translateX: this.state.currentLeft\n        }]\n      }\n    }, this.props.children);\n\n    return _react.default.createElement(_View.default, this._panResponder.panHandlers, slideOutView, swipeableView);\n  },\n  close: function close() {\n    this.props.onClose();\n\n    this._animateToClosedPosition();\n  },\n  _onSwipeableViewLayout: function _onSwipeableViewLayout(event) {\n    this.setState({\n      isSwipeableViewRendered: true,\n      rowHeight: event.nativeEvent.layout.height\n    });\n  },\n  _handleMoveShouldSetPanResponderCapture: function _handleMoveShouldSetPanResponderCapture(event, gestureState) {\n    return gestureState.dy < 10 && this._isValidSwipe(gestureState);\n  },\n  _handlePanResponderGrant: function _handlePanResponderGrant(event, gestureState) {},\n  _handlePanResponderMove: function _handlePanResponderMove(event, gestureState) {\n    if (this._isSwipingExcessivelyRightFromClosedPosition(gestureState)) {\n      return;\n    }\n\n    this.props.onSwipeStart();\n\n    if (this._isSwipingRightFromClosed(gestureState)) {\n      this._swipeSlowSpeed(gestureState);\n    } else {\n      this._swipeFullSpeed(gestureState);\n    }\n  },\n  _isSwipingRightFromClosed: function _isSwipingRightFromClosed(gestureState) {\n    var gestureStateDx = isRTL() ? -gestureState.dx : gestureState.dx;\n    return this._previousLeft === CLOSED_LEFT_POSITION && gestureStateDx > 0;\n  },\n  _swipeFullSpeed: function _swipeFullSpeed(gestureState) {\n    this.state.currentLeft.setValue(this._previousLeft + gestureState.dx);\n  },\n  _swipeSlowSpeed: function _swipeSlowSpeed(gestureState) {\n    this.state.currentLeft.setValue(this._previousLeft + gestureState.dx / SLOW_SPEED_SWIPE_FACTOR);\n  },\n  _isSwipingExcessivelyRightFromClosedPosition: function _isSwipingExcessivelyRightFromClosedPosition(gestureState) {\n    var gestureStateDx = isRTL() ? -gestureState.dx : gestureState.dx;\n    return this._isSwipingRightFromClosed(gestureState) && gestureStateDx > RIGHT_SWIPE_THRESHOLD;\n  },\n  _onPanResponderTerminationRequest: function _onPanResponderTerminationRequest(event, gestureState) {\n    return false;\n  },\n  _animateTo: function _animateTo(toValue, duration, callback) {\n    var _this2 = this;\n\n    if (duration === void 0) {\n      duration = SWIPE_DURATION;\n    }\n\n    if (callback === void 0) {\n      callback = _emptyFunction.default;\n    }\n\n    _Animated.default.timing(this.state.currentLeft, {\n      duration: duration,\n      toValue: toValue,\n      useNativeDriver: true\n    }).start(function () {\n      _this2._previousLeft = toValue;\n      callback();\n    });\n  },\n  _animateToOpenPosition: function _animateToOpenPosition() {\n    var maxSwipeDistance = isRTL() ? -this.props.maxSwipeDistance : this.props.maxSwipeDistance;\n\n    this._animateTo(-maxSwipeDistance);\n  },\n  _animateToOpenPositionWith: function _animateToOpenPositionWith(speed, distMoved) {\n    speed = speed > HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD ? speed : HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD;\n    var duration = Math.abs((this.props.maxSwipeDistance - Math.abs(distMoved)) / speed);\n    var maxSwipeDistance = isRTL() ? -this.props.maxSwipeDistance : this.props.maxSwipeDistance;\n\n    this._animateTo(-maxSwipeDistance, duration);\n  },\n  _animateToClosedPosition: function _animateToClosedPosition(duration) {\n    if (duration === void 0) {\n      duration = SWIPE_DURATION;\n    }\n\n    this._animateTo(CLOSED_LEFT_POSITION, duration);\n  },\n  _animateToClosedPositionDuringBounce: function _animateToClosedPositionDuringBounce() {\n    this._animateToClosedPosition(RIGHT_SWIPE_BOUNCE_BACK_DURATION);\n  },\n  _animateBounceBack: function _animateBounceBack(duration) {\n    var swipeBounceBackDistance = isRTL() ? -RIGHT_SWIPE_BOUNCE_BACK_DISTANCE : RIGHT_SWIPE_BOUNCE_BACK_DISTANCE;\n\n    this._animateTo(-swipeBounceBackDistance, duration, this._animateToClosedPositionDuringBounce);\n  },\n  _isValidSwipe: function _isValidSwipe(gestureState) {\n    if (this.props.preventSwipeRight && this._previousLeft === CLOSED_LEFT_POSITION && gestureState.dx > 0) {\n      return false;\n    }\n\n    return Math.abs(gestureState.dx) > HORIZONTAL_SWIPE_DISTANCE_THRESHOLD;\n  },\n  _shouldAnimateRemainder: function _shouldAnimateRemainder(gestureState) {\n    return Math.abs(gestureState.dx) > this.props.swipeThreshold || gestureState.vx > HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD;\n  },\n  _handlePanResponderEnd: function _handlePanResponderEnd(event, gestureState) {\n    var horizontalDistance = isRTL() ? -gestureState.dx : gestureState.dx;\n\n    if (this._isSwipingRightFromClosed(gestureState)) {\n      this.props.onOpen();\n\n      this._animateBounceBack(RIGHT_SWIPE_BOUNCE_BACK_DURATION);\n    } else if (this._shouldAnimateRemainder(gestureState)) {\n      if (horizontalDistance < 0) {\n        this.props.onOpen();\n\n        this._animateToOpenPositionWith(gestureState.vx, horizontalDistance);\n      } else {\n        this.props.onClose();\n\n        this._animateToClosedPosition();\n      }\n    } else {\n      if (this._previousLeft === CLOSED_LEFT_POSITION) {\n        this._animateToClosedPosition();\n      } else {\n        this._animateToOpenPosition();\n      }\n    }\n\n    this.props.onSwipeEnd();\n  }\n});\n\nvar styles = _StyleSheet.default.create({\n  slideOutContainer: {\n    bottom: 0,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0\n  }\n});\n\nvar _default = SwipeableRow;\nexports.default = _default;","map":{"version":3,"sources":["E:/UTCH/Cuatrimestre 4/Diseño de Apps/reactNative/actividad-10/node_modules/react-native-web/dist/vendor/react-native/SwipeableRow/index.js"],"names":["isRTL","I18nManager","CLOSED_LEFT_POSITION","HORIZONTAL_SWIPE_DISTANCE_THRESHOLD","HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD","SLOW_SPEED_SWIPE_FACTOR","SWIPE_DURATION","ON_MOUNT_BOUNCE_DELAY","ON_MOUNT_BOUNCE_DURATION","RIGHT_SWIPE_BOUNCE_BACK_DISTANCE","RIGHT_SWIPE_BOUNCE_BACK_DURATION","RIGHT_SWIPE_THRESHOLD","SwipeableRow","displayName","_panResponder","_previousLeft","mixins","TimerMixin","propTypes","children","PropTypes","any","isOpen","bool","preventSwipeRight","maxSwipeDistance","number","isRequired","onOpen","func","onClose","onSwipeEnd","onSwipeStart","shouldBounceOnMount","slideoutView","node","swipeThreshold","getInitialState","currentLeft","Animated","Value","isSwipeableViewRendered","rowHeight","getDefaultProps","emptyFunction","UNSAFE_componentWillMount","PanResponder","create","onMoveShouldSetPanResponderCapture","_handleMoveShouldSetPanResponderCapture","onPanResponderGrant","_handlePanResponderGrant","onPanResponderMove","_handlePanResponderMove","onPanResponderRelease","_handlePanResponderEnd","onPanResponderTerminationRequest","_onPanResponderTerminationRequest","onPanResponderTerminate","onShouldBlockNativeResponder","event","gestureState","componentDidMount","_this","props","setTimeout","_animateBounceBack","UNSAFE_componentWillReceiveProps","nextProps","_animateToClosedPosition","render","slideOutView","state","React","createElement","View","style","styles","slideOutContainer","height","swipeableView","onLayout","_onSwipeableViewLayout","transform","translateX","panHandlers","close","setState","nativeEvent","layout","dy","_isValidSwipe","_isSwipingExcessivelyRightFromClosedPosition","_isSwipingRightFromClosed","_swipeSlowSpeed","_swipeFullSpeed","gestureStateDx","dx","setValue","_animateTo","toValue","duration","callback","_this2","timing","useNativeDriver","start","_animateToOpenPosition","_animateToOpenPositionWith","speed","distMoved","Math","abs","_animateToClosedPositionDuringBounce","swipeBounceBackDistance","_shouldAnimateRemainder","vx","horizontalDistance","StyleSheet","bottom","left","position","right","top"],"mappings":"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","sourcesContent":["/**\r\n * Copyright (c) 2015-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @providesModule SwipeableRow\r\n * \r\n */\r\n'use strict';\r\n\r\nimport Animated from '../../../exports/Animated';\r\nimport I18nManager from '../../../exports/I18nManager';\r\nimport PanResponder from '../../../exports/PanResponder';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport StyleSheet from '../../../exports/StyleSheet';\r\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\r\n * found when Flow v0.54 was deployed. To see the error delete this comment and\r\n * run Flow. */\r\n\r\nimport TimerMixin from 'react-timer-mixin';\r\nimport View from '../../../exports/View';\r\nimport createReactClass from 'create-react-class';\r\nimport emptyFunction from 'fbjs/lib/emptyFunction';\r\n\r\nvar isRTL = function isRTL() {\r\n  return I18nManager.isRTL;\r\n}; // NOTE: Eventually convert these consts to an input object of configurations\r\n// Position of the left of the swipable item when closed\r\n\r\n\r\nvar CLOSED_LEFT_POSITION = 0; // Minimum swipe distance before we recognize it as such\r\n\r\nvar HORIZONTAL_SWIPE_DISTANCE_THRESHOLD = 10; // Minimum swipe speed before we fully animate the user's action (open/close)\r\n\r\nvar HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD = 0.3; // Factor to divide by to get slow speed; i.e. 4 means 1/4 of full speed\r\n\r\nvar SLOW_SPEED_SWIPE_FACTOR = 4; // Time, in milliseconds, of how long the animated swipe should be\r\n\r\nvar SWIPE_DURATION = 300;\r\n/**\r\n * On SwipeableListView mount, the 1st item will bounce to show users it's\r\n * possible to swipe\r\n */\r\n\r\nvar ON_MOUNT_BOUNCE_DELAY = 700;\r\nvar ON_MOUNT_BOUNCE_DURATION = 400; // Distance left of closed position to bounce back when right-swiping from closed\r\n\r\nvar RIGHT_SWIPE_BOUNCE_BACK_DISTANCE = 30;\r\nvar RIGHT_SWIPE_BOUNCE_BACK_DURATION = 300;\r\n/**\r\n * Max distance of right swipe to allow (right swipes do functionally nothing).\r\n * Must be multiplied by SLOW_SPEED_SWIPE_FACTOR because gestureState.dx tracks\r\n * how far the finger swipes, and not the actual animation distance.\r\n*/\r\n\r\nvar RIGHT_SWIPE_THRESHOLD = 30 * SLOW_SPEED_SWIPE_FACTOR;\r\n/**\r\n * Creates a swipable row that allows taps on the main item and a custom View\r\n * on the item hidden behind the row. Typically this should be used in\r\n * conjunction with SwipeableListView for additional functionality, but can be\r\n * used in a normal ListView. See the renderRow for SwipeableListView to see how\r\n * to use this component separately.\r\n */\r\n\r\nvar SwipeableRow = createReactClass({\r\n  displayName: 'SwipeableRow',\r\n  _panResponder: {},\r\n  _previousLeft: CLOSED_LEFT_POSITION,\r\n  mixins: [TimerMixin],\r\n  propTypes: {\r\n    children: PropTypes.any,\r\n    isOpen: PropTypes.bool,\r\n    preventSwipeRight: PropTypes.bool,\r\n    maxSwipeDistance: PropTypes.number.isRequired,\r\n    onOpen: PropTypes.func.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSwipeEnd: PropTypes.func.isRequired,\r\n    onSwipeStart: PropTypes.func.isRequired,\r\n    // Should bounce the row on mount\r\n    shouldBounceOnMount: PropTypes.bool,\r\n\r\n    /**\r\n     * A ReactElement that is unveiled when the user swipes\r\n     */\r\n    slideoutView: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * The minimum swipe distance required before fully animating the swipe. If\r\n     * the user swipes less than this distance, the item will return to its\r\n     * previous (open/close) position.\r\n     */\r\n    swipeThreshold: PropTypes.number.isRequired\r\n  },\r\n  getInitialState: function getInitialState() {\r\n    return {\r\n      currentLeft: new Animated.Value(this._previousLeft),\r\n\r\n      /**\r\n       * In order to render component A beneath component B, A must be rendered\r\n       * before B. However, this will cause \"flickering\", aka we see A briefly\r\n       * then B. To counter this, _isSwipeableViewRendered flag is used to set\r\n       * component A to be transparent until component B is loaded.\r\n       */\r\n      isSwipeableViewRendered: false,\r\n      rowHeight: null\r\n    };\r\n  },\r\n  getDefaultProps: function getDefaultProps() {\r\n    return {\r\n      isOpen: false,\r\n      preventSwipeRight: false,\r\n      maxSwipeDistance: 0,\r\n      onOpen: emptyFunction,\r\n      onClose: emptyFunction,\r\n      onSwipeEnd: emptyFunction,\r\n      onSwipeStart: emptyFunction,\r\n      swipeThreshold: 30\r\n    };\r\n  },\r\n  UNSAFE_componentWillMount: function UNSAFE_componentWillMount() {\r\n    this._panResponder = PanResponder.create({\r\n      onMoveShouldSetPanResponderCapture: this._handleMoveShouldSetPanResponderCapture,\r\n      onPanResponderGrant: this._handlePanResponderGrant,\r\n      onPanResponderMove: this._handlePanResponderMove,\r\n      onPanResponderRelease: this._handlePanResponderEnd,\r\n      onPanResponderTerminationRequest: this._onPanResponderTerminationRequest,\r\n      onPanResponderTerminate: this._handlePanResponderEnd,\r\n      onShouldBlockNativeResponder: function onShouldBlockNativeResponder(event, gestureState) {\r\n        return false;\r\n      }\r\n    });\r\n  },\r\n  componentDidMount: function componentDidMount() {\r\n    var _this = this;\r\n\r\n    if (this.props.shouldBounceOnMount) {\r\n      /**\r\n       * Do the on mount bounce after a delay because if we animate when other\r\n       * components are loading, the animation will be laggy\r\n       */\r\n      this.setTimeout(function () {\r\n        _this._animateBounceBack(ON_MOUNT_BOUNCE_DURATION);\r\n      }, ON_MOUNT_BOUNCE_DELAY);\r\n    }\r\n  },\r\n  UNSAFE_componentWillReceiveProps: function UNSAFE_componentWillReceiveProps(nextProps) {\r\n    /**\r\n     * We do not need an \"animateOpen(noCallback)\" because this animation is\r\n     * handled internally by this component.\r\n     */\r\n    if (this.props.isOpen && !nextProps.isOpen) {\r\n      this._animateToClosedPosition();\r\n    }\r\n  },\r\n  render: function render() {\r\n    // The view hidden behind the main view\r\n    var slideOutView;\r\n\r\n    if (this.state.isSwipeableViewRendered && this.state.rowHeight) {\r\n      slideOutView = React.createElement(View, {\r\n        style: [styles.slideOutContainer, {\r\n          height: this.state.rowHeight\r\n        }]\r\n      }, this.props.slideoutView);\r\n    } // The swipeable item\r\n\r\n\r\n    var swipeableView = React.createElement(Animated.View, {\r\n      onLayout: this._onSwipeableViewLayout,\r\n      style: {\r\n        transform: [{\r\n          translateX: this.state.currentLeft\r\n        }]\r\n      }\r\n    }, this.props.children);\r\n    return React.createElement(View, this._panResponder.panHandlers, slideOutView, swipeableView);\r\n  },\r\n  close: function close() {\r\n    this.props.onClose();\r\n\r\n    this._animateToClosedPosition();\r\n  },\r\n  _onSwipeableViewLayout: function _onSwipeableViewLayout(event) {\r\n    this.setState({\r\n      isSwipeableViewRendered: true,\r\n      rowHeight: event.nativeEvent.layout.height\r\n    });\r\n  },\r\n  _handleMoveShouldSetPanResponderCapture: function _handleMoveShouldSetPanResponderCapture(event, gestureState) {\r\n    // Decides whether a swipe is responded to by this component or its child\r\n    return gestureState.dy < 10 && this._isValidSwipe(gestureState);\r\n  },\r\n  _handlePanResponderGrant: function _handlePanResponderGrant(event, gestureState) {},\r\n  _handlePanResponderMove: function _handlePanResponderMove(event, gestureState) {\r\n    if (this._isSwipingExcessivelyRightFromClosedPosition(gestureState)) {\r\n      return;\r\n    }\r\n\r\n    this.props.onSwipeStart();\r\n\r\n    if (this._isSwipingRightFromClosed(gestureState)) {\r\n      this._swipeSlowSpeed(gestureState);\r\n    } else {\r\n      this._swipeFullSpeed(gestureState);\r\n    }\r\n  },\r\n  _isSwipingRightFromClosed: function _isSwipingRightFromClosed(gestureState) {\r\n    var gestureStateDx = isRTL() ? -gestureState.dx : gestureState.dx;\r\n    return this._previousLeft === CLOSED_LEFT_POSITION && gestureStateDx > 0;\r\n  },\r\n  _swipeFullSpeed: function _swipeFullSpeed(gestureState) {\r\n    this.state.currentLeft.setValue(this._previousLeft + gestureState.dx);\r\n  },\r\n  _swipeSlowSpeed: function _swipeSlowSpeed(gestureState) {\r\n    this.state.currentLeft.setValue(this._previousLeft + gestureState.dx / SLOW_SPEED_SWIPE_FACTOR);\r\n  },\r\n  _isSwipingExcessivelyRightFromClosedPosition: function _isSwipingExcessivelyRightFromClosedPosition(gestureState) {\r\n    /**\r\n     * We want to allow a BIT of right swipe, to allow users to know that\r\n     * swiping is available, but swiping right does not do anything\r\n     * functionally.\r\n     */\r\n    var gestureStateDx = isRTL() ? -gestureState.dx : gestureState.dx;\r\n    return this._isSwipingRightFromClosed(gestureState) && gestureStateDx > RIGHT_SWIPE_THRESHOLD;\r\n  },\r\n  _onPanResponderTerminationRequest: function _onPanResponderTerminationRequest(event, gestureState) {\r\n    return false;\r\n  },\r\n  _animateTo: function _animateTo(toValue, duration, callback) {\r\n    var _this2 = this;\r\n\r\n    if (duration === void 0) {\r\n      duration = SWIPE_DURATION;\r\n    }\r\n\r\n    if (callback === void 0) {\r\n      callback = emptyFunction;\r\n    }\r\n\r\n    Animated.timing(this.state.currentLeft, {\r\n      duration: duration,\r\n      toValue: toValue,\r\n      useNativeDriver: true\r\n    }).start(function () {\r\n      _this2._previousLeft = toValue;\r\n      callback();\r\n    });\r\n  },\r\n  _animateToOpenPosition: function _animateToOpenPosition() {\r\n    var maxSwipeDistance = isRTL() ? -this.props.maxSwipeDistance : this.props.maxSwipeDistance;\r\n\r\n    this._animateTo(-maxSwipeDistance);\r\n  },\r\n  _animateToOpenPositionWith: function _animateToOpenPositionWith(speed, distMoved) {\r\n    /**\r\n     * Ensure the speed is at least the set speed threshold to prevent a slow\r\n     * swiping animation\r\n     */\r\n    speed = speed > HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD ? speed : HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD;\r\n    /**\r\n     * Calculate the duration the row should take to swipe the remaining distance\r\n     * at the same speed the user swiped (or the speed threshold)\r\n     */\r\n\r\n    var duration = Math.abs((this.props.maxSwipeDistance - Math.abs(distMoved)) / speed);\r\n    var maxSwipeDistance = isRTL() ? -this.props.maxSwipeDistance : this.props.maxSwipeDistance;\r\n\r\n    this._animateTo(-maxSwipeDistance, duration);\r\n  },\r\n  _animateToClosedPosition: function _animateToClosedPosition(duration) {\r\n    if (duration === void 0) {\r\n      duration = SWIPE_DURATION;\r\n    }\r\n\r\n    this._animateTo(CLOSED_LEFT_POSITION, duration);\r\n  },\r\n  _animateToClosedPositionDuringBounce: function _animateToClosedPositionDuringBounce() {\r\n    this._animateToClosedPosition(RIGHT_SWIPE_BOUNCE_BACK_DURATION);\r\n  },\r\n  _animateBounceBack: function _animateBounceBack(duration) {\r\n    /**\r\n     * When swiping right, we want to bounce back past closed position on release\r\n     * so users know they should swipe right to get content.\r\n     */\r\n    var swipeBounceBackDistance = isRTL() ? -RIGHT_SWIPE_BOUNCE_BACK_DISTANCE : RIGHT_SWIPE_BOUNCE_BACK_DISTANCE;\r\n\r\n    this._animateTo(-swipeBounceBackDistance, duration, this._animateToClosedPositionDuringBounce);\r\n  },\r\n  // Ignore swipes due to user's finger moving slightly when tapping\r\n  _isValidSwipe: function _isValidSwipe(gestureState) {\r\n    if (this.props.preventSwipeRight && this._previousLeft === CLOSED_LEFT_POSITION && gestureState.dx > 0) {\r\n      return false;\r\n    }\r\n\r\n    return Math.abs(gestureState.dx) > HORIZONTAL_SWIPE_DISTANCE_THRESHOLD;\r\n  },\r\n  _shouldAnimateRemainder: function _shouldAnimateRemainder(gestureState) {\r\n    /**\r\n     * If user has swiped past a certain distance, animate the rest of the way\r\n     * if they let go\r\n     */\r\n    return Math.abs(gestureState.dx) > this.props.swipeThreshold || gestureState.vx > HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD;\r\n  },\r\n  _handlePanResponderEnd: function _handlePanResponderEnd(event, gestureState) {\r\n    var horizontalDistance = isRTL() ? -gestureState.dx : gestureState.dx;\r\n\r\n    if (this._isSwipingRightFromClosed(gestureState)) {\r\n      this.props.onOpen();\r\n\r\n      this._animateBounceBack(RIGHT_SWIPE_BOUNCE_BACK_DURATION);\r\n    } else if (this._shouldAnimateRemainder(gestureState)) {\r\n      if (horizontalDistance < 0) {\r\n        // Swiped left\r\n        this.props.onOpen();\r\n\r\n        this._animateToOpenPositionWith(gestureState.vx, horizontalDistance);\r\n      } else {\r\n        // Swiped right\r\n        this.props.onClose();\r\n\r\n        this._animateToClosedPosition();\r\n      }\r\n    } else {\r\n      if (this._previousLeft === CLOSED_LEFT_POSITION) {\r\n        this._animateToClosedPosition();\r\n      } else {\r\n        this._animateToOpenPosition();\r\n      }\r\n    }\r\n\r\n    this.props.onSwipeEnd();\r\n  }\r\n});\r\nvar styles = StyleSheet.create({\r\n  slideOutContainer: {\r\n    bottom: 0,\r\n    left: 0,\r\n    position: 'absolute',\r\n    right: 0,\r\n    top: 0\r\n  }\r\n});\r\nexport default SwipeableRow;"]},"metadata":{},"sourceType":"script"}