{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = RegistrationScreen;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeKeyboardAwareScrollView = require(\"react-native-keyboard-aware-scroll-view\");\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _config = require(\"../../firebase/config\");\n\nvar _jsxFileName = \"E:\\\\UTCH\\\\Cuatrimestre 4\\\\Dise\\xF1o de Apps\\\\reactNative\\\\actividad-10\\\\src\\\\screens\\\\RegistrationScreen\\\\RegistrationScreen.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction RegistrationScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      fullName = _useState2[0],\n      setFullName = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(''),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(''),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(''),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      confirmPassword = _useState8[0],\n      setConfirmPassword = _useState8[1];\n\n  var onFooterLinkPress = function onFooterLinkPress() {\n    navigation.navigate('Login');\n  };\n\n  var onRegisterPress = function onRegisterPress() {\n    if (password !== confirmPassword) {\n      alert(\"Los Passwords no concuerdan.\");\n      return;\n    }\n\n    _config.firebase.auth().createUserWithEmailAndPassword(email, password).then(function (response) {\n      var uid = response.user.uid;\n      var data = {\n        id: uid,\n        email: email,\n        fullName: fullName\n      };\n\n      var usersRef = _config.firebase.firestore().collection('users');\n\n      usersRef.doc(uid).set(data).then(function () {\n        navigation.navigate('Home', {\n          user: data\n        });\n      }).catch(function (error) {\n        alert(error);\n      });\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  return _react.default.createElement(_reactNative.View, {\n    style: _styles.default.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNativeKeyboardAwareScrollView.KeyboardAwareScrollView, {\n    style: {\n      flex: 1,\n      width: '100%'\n    },\n    keyboardShouldPersistTaps: \"always\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.Image, {\n    style: _styles.default.logo,\n    source: require('../../../assets/icon.png'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), _react.default.createElement(_reactNative.TextInput, {\n    style: _styles.default.input,\n    placeholder: \"Nombre completo\",\n    placeholderTextColor: \"#aaaaaa\",\n    onChangeText: function onChangeText(text) {\n      return setFullName(text);\n    },\n    value: fullName,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), _react.default.createElement(_reactNative.TextInput, {\n    style: _styles.default.input,\n    placeholder: \"Correo electronico\",\n    placeholderTextColor: \"#aaaaaa\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    value: email,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), _react.default.createElement(_reactNative.TextInput, {\n    style: _styles.default.input,\n    placeholderTextColor: \"#aaaaaa\",\n    secureTextEntry: true,\n    placeholder: \"Password\",\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    value: password,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }), _react.default.createElement(_reactNative.TextInput, {\n    style: _styles.default.input,\n    placeholderTextColor: \"#aaaaaa\",\n    secureTextEntry: true,\n    placeholder: \"Confirmar Password\",\n    onChangeText: function onChangeText(text) {\n      return setConfirmPassword(text);\n    },\n    value: confirmPassword,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }), _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: _styles.default.button,\n    onPress: function onPress() {\n      return onRegisterPress();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: _styles.default.buttonTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, \"Crear cuenta\")), _react.default.createElement(_reactNative.View, {\n    style: _styles.default.footerView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: _styles.default.footerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, \"\\xBFYa tienes cuenta? \", _react.default.createElement(_reactNative.Text, {\n    onPress: onFooterLinkPress,\n    style: _styles.default.footerLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 72\n    }\n  }, \"Log in\")))));\n}","map":{"version":3,"sources":["E:/UTCH/Cuatrimestre 4/Dise√±o de Apps/reactNative/actividad-10/src/screens/RegistrationScreen/RegistrationScreen.js"],"names":["RegistrationScreen","navigation","fullName","setFullName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","onFooterLinkPress","navigate","onRegisterPress","alert","firebase","auth","createUserWithEmailAndPassword","then","response","uid","user","data","id","usersRef","firestore","collection","doc","set","catch","error","styles","container","flex","width","logo","require","input","text","button","buttonTitle","footerView","footerText","footerLink"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEe,SAASA,kBAAT,OAA0C;AAAA,MAAbC,UAAa,QAAbA,UAAa;;AACrD,kBAAgC,qBAAS,EAAT,CAAhC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA0B,qBAAS,EAAT,CAA1B;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgC,qBAAS,EAAT,CAAhC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA8C,qBAAS,EAAT,CAA9C;AAAA;AAAA,MAAOC,eAAP;AAAA,MAAwBC,kBAAxB;;AAEA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC5BT,IAAAA,UAAU,CAACU,QAAX,CAAoB,OAApB;AACH,GAFD;;AAIA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1B,QAAIN,QAAQ,KAAKE,eAAjB,EAAkC;AAC9BK,MAAAA,KAAK,CAAC,8BAAD,CAAL;AACA;AACH;;AAEDC,qBACKC,IADL,GAEKC,8BAFL,CAEoCZ,KAFpC,EAE2CE,QAF3C,EAGKW,IAHL,CAGU,UAACC,QAAD,EAAc;AAChB,UAAMC,GAAG,GAAGD,QAAQ,CAACE,IAAT,CAAcD,GAA1B;AACA,UAAME,IAAI,GAAG;AACTC,QAAAA,EAAE,EAAEH,GADK;AAETf,QAAAA,KAAK,EAALA,KAFS;AAGTF,QAAAA,QAAQ,EAARA;AAHS,OAAb;;AAKA,UAAMqB,QAAQ,GAAGT,iBAASU,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,CAAjB;;AACAF,MAAAA,QAAQ,CACHG,GADL,CACSP,GADT,EAEKQ,GAFL,CAESN,IAFT,EAGKJ,IAHL,CAGU,YAAM;AACRhB,QAAAA,UAAU,CAACU,QAAX,CAAoB,MAApB,EAA4B;AAACS,UAAAA,IAAI,EAAEC;AAAP,SAA5B;AACH,OALL,EAMKO,KANL,CAMW,UAACC,KAAD,EAAW;AACdhB,QAAAA,KAAK,CAACgB,KAAD,CAAL;AACH,OARL;AASH,KApBL,EAqBKD,KArBL,CAqBW,UAACC,KAAD,EAAW;AACdhB,MAAAA,KAAK,CAACgB,KAAD,CAAL;AACP,KAvBD;AAwBH,GA9BD;;AAgCA,SACI,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEC,gBAAOC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6BAAC,2DAAD;AACI,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,KAAK,EAAE;AAAlB,KADX;AAEI,IAAA,yBAAyB,EAAC,QAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,6BAAC,kBAAD;AACI,IAAA,KAAK,EAAEH,gBAAOI,IADlB;AAEI,IAAA,MAAM,EAAEC,OAAO,CAAC,0BAAD,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAOI,6BAAC,sBAAD;AACI,IAAA,KAAK,EAAEL,gBAAOM,KADlB;AAEI,IAAA,WAAW,EAAC,iBAFhB;AAGI,IAAA,oBAAoB,EAAC,SAHzB;AAII,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAUlC,WAAW,CAACkC,IAAD,CAArB;AAAA,KAJlB;AAKI,IAAA,KAAK,EAAEnC,QALX;AAMI,IAAA,qBAAqB,EAAC,aAN1B;AAOI,IAAA,cAAc,EAAC,MAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAgBI,6BAAC,sBAAD;AACI,IAAA,KAAK,EAAE4B,gBAAOM,KADlB;AAEI,IAAA,WAAW,EAAC,oBAFhB;AAGI,IAAA,oBAAoB,EAAC,SAHzB;AAII,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAUhC,QAAQ,CAACgC,IAAD,CAAlB;AAAA,KAJlB;AAKI,IAAA,KAAK,EAAEjC,KALX;AAMI,IAAA,qBAAqB,EAAC,aAN1B;AAOI,IAAA,cAAc,EAAC,MAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,EAyBI,6BAAC,sBAAD;AACI,IAAA,KAAK,EAAE0B,gBAAOM,KADlB;AAEI,IAAA,oBAAoB,EAAC,SAFzB;AAGI,IAAA,eAAe,MAHnB;AAII,IAAA,WAAW,EAAC,UAJhB;AAKI,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAU9B,WAAW,CAAC8B,IAAD,CAArB;AAAA,KALlB;AAMI,IAAA,KAAK,EAAE/B,QANX;AAOI,IAAA,qBAAqB,EAAC,aAP1B;AAQI,IAAA,cAAc,EAAC,MARnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBJ,EAmCI,6BAAC,sBAAD;AACI,IAAA,KAAK,EAAEwB,gBAAOM,KADlB;AAEI,IAAA,oBAAoB,EAAC,SAFzB;AAGI,IAAA,eAAe,MAHnB;AAII,IAAA,WAAW,EAAC,oBAJhB;AAKI,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAU5B,kBAAkB,CAAC4B,IAAD,CAA5B;AAAA,KALlB;AAMI,IAAA,KAAK,EAAE7B,eANX;AAOI,IAAA,qBAAqB,EAAC,aAP1B;AAQI,IAAA,cAAc,EAAC,MARnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnCJ,EA6CI,6BAAC,6BAAD;AACI,IAAA,KAAK,EAAEsB,gBAAOQ,MADlB;AAEI,IAAA,OAAO,EAAE;AAAA,aAAM1B,eAAe,EAArB;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEkB,gBAAOS,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,CA7CJ,EAkDI,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAET,gBAAOU,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEV,gBAAOW,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAmD,6BAAC,iBAAD;AAAM,IAAA,OAAO,EAAE/B,iBAAf;AAAkC,IAAA,KAAK,EAAEoB,gBAAOY,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAnD,CADJ,CAlDJ,CADJ,CADJ;AA0DH","sourcesContent":["import React, { useState } from 'react'\r\nimport { Image, Text, TextInput, TouchableOpacity, View } from 'react-native'\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\r\nimport styles from './styles';\r\nimport { firebase } from '../../firebase/config'\r\n\r\nexport default function RegistrationScreen({navigation}) {\r\n    const [fullName, setFullName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    const onFooterLinkPress = () => {\r\n        navigation.navigate('Login')\r\n    }\r\n\r\n    const onRegisterPress = () => {\r\n        if (password !== confirmPassword) {\r\n            alert(\"Los Passwords no concuerdan.\")\r\n            return\r\n        }\r\n    \r\n        firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then((response) => {\r\n                const uid = response.user.uid\r\n                const data = {\r\n                    id: uid,\r\n                    email,\r\n                    fullName,\r\n                };\r\n                const usersRef = firebase.firestore().collection('users')\r\n                usersRef\r\n                    .doc(uid)\r\n                    .set(data)\r\n                    .then(() => {\r\n                        navigation.navigate('Home', {user: data})\r\n                    })\r\n                    .catch((error) => {\r\n                        alert(error)\r\n                    });\r\n            })\r\n            .catch((error) => {\r\n                alert(error)\r\n        });\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <KeyboardAwareScrollView\r\n                style={{ flex: 1, width: '100%' }}\r\n                keyboardShouldPersistTaps=\"always\">\r\n                <Image\r\n                    style={styles.logo}\r\n                    source={require('../../../assets/icon.png')}\r\n                />\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder='Nombre completo'\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    onChangeText={(text) => setFullName(text)}\r\n                    value={fullName}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder='Correo electronico'\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    onChangeText={(text) => setEmail(text)}\r\n                    value={email}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    secureTextEntry\r\n                    placeholder='Password'\r\n                    onChangeText={(text) => setPassword(text)}\r\n                    value={password}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    secureTextEntry\r\n                    placeholder='Confirmar Password'\r\n                    onChangeText={(text) => setConfirmPassword(text)}\r\n                    value={confirmPassword}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                <TouchableOpacity\r\n                    style={styles.button}\r\n                    onPress={() => onRegisterPress()}>\r\n                    <Text style={styles.buttonTitle}>Crear cuenta</Text>\r\n                </TouchableOpacity>\r\n                <View style={styles.footerView}>\r\n                    <Text style={styles.footerText}>¬øYa tienes cuenta? <Text onPress={onFooterLinkPress} style={styles.footerLink}>Log in</Text></Text>\r\n                </View>\r\n            </KeyboardAwareScrollView>\r\n        </View>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"script"}