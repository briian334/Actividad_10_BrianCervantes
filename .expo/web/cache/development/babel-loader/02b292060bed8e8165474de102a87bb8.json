{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _dangerousStyleValue = _interopRequireDefault(require(\"../dangerousStyleValue\"));\n\nvar _hyphenateStyleName = _interopRequireDefault(require(\"hyphenate-style-name\"));\n\nvar _warnValidStyle = _interopRequireDefault(require(\"../warnValidStyle\"));\n\nfunction setValueForStyles(node, styles, getStack) {\n  var style = node.style;\n\n  for (var styleName in styles) {\n    if (!styles.hasOwnProperty(styleName)) {\n      continue;\n    }\n\n    var isCustomProperty = styleName.indexOf('--') === 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!isCustomProperty) {\n        (0, _warnValidStyle.default)(styleName, styles[styleName], getStack);\n      }\n    }\n\n    var styleValue = (0, _dangerousStyleValue.default)(styleName, styles[styleName], isCustomProperty);\n\n    if (styleName === 'float') {\n      styleName = 'cssFloat';\n    }\n\n    if (isCustomProperty) {\n      var name = isCustomProperty ? styleName : (0, _hyphenateStyleName.default)(styleName);\n      style.setProperty(name, styleValue);\n    } else {\n      style[styleName] = styleValue;\n    }\n  }\n}\n\nvar _default = setValueForStyles;\nexports.default = _default;","map":{"version":3,"sources":["E:/UTCH/Cuatrimestre 4/Dise√±o de Apps/reactNative/actividad-10/node_modules/react-native-web/dist/vendor/react-dom/setValueForStyles/index.js"],"names":["setValueForStyles","node","styles","getStack","style","styleName","hasOwnProperty","isCustomProperty","indexOf","process","env","NODE_ENV","styleValue","name","setProperty"],"mappings":";;;;;;;AAWA;;AACA;;AACA;;AASA,SAASA,iBAAT,CAA2BC,IAA3B,EAAiCC,MAAjC,EAAyCC,QAAzC,EAAmD;AACjD,MAAIC,KAAK,GAAGH,IAAI,CAACG,KAAjB;;AAEA,OAAK,IAAIC,SAAT,IAAsBH,MAAtB,EAA8B;AAC5B,QAAI,CAACA,MAAM,CAACI,cAAP,CAAsBD,SAAtB,CAAL,EAAuC;AACrC;AACD;;AAED,QAAIE,gBAAgB,GAAGF,SAAS,CAACG,OAAV,CAAkB,IAAlB,MAA4B,CAAnD;;AAEA,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAI,CAACJ,gBAAL,EAAuB;AACrB,qCAAeF,SAAf,EAA0BH,MAAM,CAACG,SAAD,CAAhC,EAA6CF,QAA7C;AACD;AACF;;AAED,QAAIS,UAAU,GAAG,kCAAoBP,SAApB,EAA+BH,MAAM,CAACG,SAAD,CAArC,EAAkDE,gBAAlD,CAAjB;;AAEA,QAAIF,SAAS,KAAK,OAAlB,EAA2B;AACzBA,MAAAA,SAAS,GAAG,UAAZ;AACD;;AAED,QAAIE,gBAAJ,EAAsB;AACpB,UAAIM,IAAI,GAAGN,gBAAgB,GAAGF,SAAH,GAAe,iCAAmBA,SAAnB,CAA1C;AACAD,MAAAA,KAAK,CAACU,WAAN,CAAkBD,IAAlB,EAAwBD,UAAxB;AACD,KAHD,MAGO;AACLR,MAAAA,KAAK,CAACC,SAAD,CAAL,GAAmBO,UAAnB;AACD;AACF;AACF;;eAEcZ,iB","sourcesContent":["/* eslint-disable */\r\n\r\n/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * From React 16.3.0\r\n * \r\n */\r\nimport dangerousStyleValue from '../dangerousStyleValue';\r\nimport hyphenateStyleName from 'hyphenate-style-name';\r\nimport warnValidStyle from '../warnValidStyle';\r\n/**\r\n * Sets the value for multiple styles on a node.  If a value is specified as\r\n * '' (empty string), the corresponding style property will be unset.\r\n *\r\n * @param {DOMElement} node\r\n * @param {object} styles\r\n */\r\n\r\nfunction setValueForStyles(node, styles, getStack) {\r\n  var style = node.style;\r\n\r\n  for (var styleName in styles) {\r\n    if (!styles.hasOwnProperty(styleName)) {\r\n      continue;\r\n    }\r\n\r\n    var isCustomProperty = styleName.indexOf('--') === 0;\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (!isCustomProperty) {\r\n        warnValidStyle(styleName, styles[styleName], getStack);\r\n      }\r\n    }\r\n\r\n    var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);\r\n\r\n    if (styleName === 'float') {\r\n      styleName = 'cssFloat';\r\n    }\r\n\r\n    if (isCustomProperty) {\r\n      var name = isCustomProperty ? styleName : hyphenateStyleName(styleName);\r\n      style.setProperty(name, styleValue);\r\n    } else {\r\n      style[styleName] = styleValue;\r\n    }\r\n  }\r\n}\r\n\r\nexport default setValueForStyles;"]},"metadata":{},"sourceType":"script"}