{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Dimensions = _interopRequireDefault(require(\"../Dimensions\"));\n\nvar PixelRatio = function () {\n  function PixelRatio() {}\n\n  PixelRatio.get = function get() {\n    return _Dimensions.default.get('window').scale;\n  };\n\n  PixelRatio.getFontScale = function getFontScale() {\n    return _Dimensions.default.get('window').fontScale || PixelRatio.get();\n  };\n\n  PixelRatio.getPixelSizeForLayoutSize = function getPixelSizeForLayoutSize(layoutSize) {\n    return Math.round(layoutSize * PixelRatio.get());\n  };\n\n  PixelRatio.roundToNearestPixel = function roundToNearestPixel(layoutSize) {\n    var ratio = PixelRatio.get();\n    return Math.round(layoutSize * ratio) / ratio;\n  };\n\n  return PixelRatio;\n}();\n\nexports.default = PixelRatio;","map":{"version":3,"sources":["E:/UTCH/Cuatrimestre 4/Dise√±o de Apps/reactNative/actividad-10/node_modules/react-native-web/dist/exports/PixelRatio/index.js"],"names":["PixelRatio","get","Dimensions","scale","getFontScale","fontScale","getPixelSizeForLayoutSize","layoutSize","Math","round","roundToNearestPixel","ratio"],"mappings":";;;;;;;AASA;;AAKA,IAAIA,UAAU,GAEd,YAAY;AACV,WAASA,UAAT,GAAsB,CAAE;;AAKxBA,EAAAA,UAAU,CAACC,GAAX,GAAiB,SAASA,GAAT,GAAe;AAC9B,WAAOC,oBAAWD,GAAX,CAAe,QAAf,EAAyBE,KAAhC;AACD,GAFD;;AAQAH,EAAAA,UAAU,CAACI,YAAX,GAA0B,SAASA,YAAT,GAAwB;AAChD,WAAOF,oBAAWD,GAAX,CAAe,QAAf,EAAyBI,SAAzB,IAAsCL,UAAU,CAACC,GAAX,EAA7C;AACD,GAFD;;AASAD,EAAAA,UAAU,CAACM,yBAAX,GAAuC,SAASA,yBAAT,CAAmCC,UAAnC,EAA+C;AACpF,WAAOC,IAAI,CAACC,KAAL,CAAWF,UAAU,GAAGP,UAAU,CAACC,GAAX,EAAxB,CAAP;AACD,GAFD;;AAWAD,EAAAA,UAAU,CAACU,mBAAX,GAAiC,SAASA,mBAAT,CAA6BH,UAA7B,EAAyC;AACxE,QAAII,KAAK,GAAGX,UAAU,CAACC,GAAX,EAAZ;AACA,WAAOO,IAAI,CAACC,KAAL,CAAWF,UAAU,GAAGI,KAAxB,IAAiCA,KAAxC;AACD,GAHD;;AAKA,SAAOX,UAAP;AACD,CAxCD,EAFA","sourcesContent":["/**\r\n * Copyright (c) Nicolas Gallagher.\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\nimport Dimensions from '../Dimensions';\r\n/**\r\n * PixelRatio gives access to the device pixel density.\r\n */\r\n\r\nvar PixelRatio =\r\n/*#__PURE__*/\r\nfunction () {\r\n  function PixelRatio() {}\r\n\r\n  /**\r\n   * Returns the device pixel density.\r\n   */\r\n  PixelRatio.get = function get() {\r\n    return Dimensions.get('window').scale;\r\n  }\r\n  /**\r\n   * No equivalent for Web\r\n   */\r\n  ;\r\n\r\n  PixelRatio.getFontScale = function getFontScale() {\r\n    return Dimensions.get('window').fontScale || PixelRatio.get();\r\n  }\r\n  /**\r\n   * Converts a layout size (dp) to pixel size (px).\r\n   * Guaranteed to return an integer number.\r\n   */\r\n  ;\r\n\r\n  PixelRatio.getPixelSizeForLayoutSize = function getPixelSizeForLayoutSize(layoutSize) {\r\n    return Math.round(layoutSize * PixelRatio.get());\r\n  }\r\n  /**\r\n   * Rounds a layout size (dp) to the nearest layout size that corresponds to\r\n   * an integer number of pixels. For example, on a device with a PixelRatio\r\n   * of 3, `PixelRatio.roundToNearestPixel(8.4) = 8.33`, which corresponds to\r\n   * exactly (8.33 * 3) = 25 pixels.\r\n   */\r\n  ;\r\n\r\n  PixelRatio.roundToNearestPixel = function roundToNearestPixel(layoutSize) {\r\n    var ratio = PixelRatio.get();\r\n    return Math.round(layoutSize * ratio) / ratio;\r\n  };\r\n\r\n  return PixelRatio;\r\n}();\r\n\r\nexport { PixelRatio as default };"]},"metadata":{},"sourceType":"script"}