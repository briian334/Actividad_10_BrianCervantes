{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createNativeWrapper;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _NativeViewGestureHandler = _interopRequireDefault(require(\"./NativeViewGestureHandler\"));\n\nvar _jsxFileName = \"E:\\\\UTCH\\\\Cuatrimestre 4\\\\Dise\\xF1o de Apps\\\\reactNative\\\\actividad-10\\\\node_modules\\\\react-native-gesture-handler\\\\createNativeWrapper.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar NATIVE_WRAPPER_BIND_BLACKLIST = new Set(['replaceState', 'isMounted']);\nvar NATIVE_WRAPPER_PROPS_FILTER = ['id', 'minPointers', 'enabled', 'waitFor', 'simultaneousHandlers', 'shouldCancelWhenOutside', 'hitSlop', 'onGestureEvent', 'onHandlerStateChange', 'onBegan', 'onFailed', 'onCancelled', 'onActivated', 'onEnded', 'shouldActivateOnStart', 'disallowInterruption', 'onGestureHandlerEvent', 'onGestureHandlerStateChange'];\n\nfunction createNativeWrapper(Component) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var ComponentWrapper = function (_React$Component) {\n    (0, _inherits2.default)(ComponentWrapper, _React$Component);\n\n    var _super = _createSuper(ComponentWrapper);\n\n    function ComponentWrapper() {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, ComponentWrapper);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n\n      _this._refHandler = function (node) {\n        var source = node;\n\n        while (source != null) {\n          for (var _iterator = _createForOfIteratorHelperLoose(Object.getOwnPropertyNames(source)), _step; !(_step = _iterator()).done;) {\n            var methodName = _step.value;\n\n            if (!methodName.startsWith('_') && !methodName.startsWith('component') && !NATIVE_WRAPPER_BIND_BLACKLIST.has(methodName) && typeof source[methodName] === 'function' && _this[methodName] === undefined) {\n              if (source[methodName].prototype) {\n                _this[methodName] = source[methodName].bind(node);\n              } else {\n                _this[methodName] = source[methodName];\n              }\n            }\n          }\n\n          source = Object.getPrototypeOf(source);\n        }\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(ComponentWrapper, [{\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        var gestureHandlerProps = Object.keys(this.props).reduce(function (props, key) {\n          if (NATIVE_WRAPPER_PROPS_FILTER.indexOf(key) !== -1) {\n            props[key] = _this2.props[key];\n          }\n\n          return props;\n        }, _objectSpread({}, config));\n        return _react.default.createElement(_NativeViewGestureHandler.default, (0, _extends2.default)({}, gestureHandlerProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 9\n          }\n        }), _react.default.createElement(Component, (0, _extends2.default)({}, this.props, {\n          ref: this._refHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }\n        })));\n      }\n    }]);\n    return ComponentWrapper;\n  }(_react.default.Component);\n\n  ComponentWrapper.propTypes = _objectSpread({}, Component.propTypes);\n  ComponentWrapper.displayName = Component.displayName || 'ComponentWrapper';\n  return ComponentWrapper;\n}","map":{"version":3,"sources":["E:/UTCH/Cuatrimestre 4/DiseÃ±o de Apps/reactNative/actividad-10/node_modules/react-native-gesture-handler/createNativeWrapper.js"],"names":["NATIVE_WRAPPER_BIND_BLACKLIST","Set","NATIVE_WRAPPER_PROPS_FILTER","createNativeWrapper","Component","config","ComponentWrapper","_refHandler","node","source","Object","getOwnPropertyNames","methodName","startsWith","has","undefined","prototype","bind","getPrototypeOf","gestureHandlerProps","keys","props","reduce","key","indexOf","React","propTypes","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;;;;;;;;;;;;;;;;;AAEA,IAAMA,6BAA6B,GAAG,IAAIC,GAAJ,CAAQ,CAAC,cAAD,EAAiB,WAAjB,CAAR,CAAtC;AASA,IAAMC,2BAA2B,GAAG,CAClC,IADkC,EAElC,aAFkC,EAGlC,SAHkC,EAIlC,SAJkC,EAKlC,sBALkC,EAMlC,yBANkC,EAOlC,SAPkC,EAQlC,gBARkC,EASlC,sBATkC,EAUlC,SAVkC,EAWlC,UAXkC,EAYlC,aAZkC,EAalC,aAbkC,EAclC,SAdkC,EAelC,uBAfkC,EAgBlC,sBAhBkC,EAiBlC,uBAjBkC,EAkBlC,6BAlBkC,CAApC;;AAqBe,SAASC,mBAAT,CAA6BC,SAA7B,EAAqD;AAAA,MAAbC,MAAa,uEAAJ,EAAI;;AAAA,MAC5DC,gBAD4D;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,YAQhEC,WARgE,GAQlD,UAAAC,IAAI,EAAI;AAEpB,YAAIC,MAAM,GAAGD,IAAb;;AACA,eAAOC,MAAM,IAAI,IAAjB,EAAuB;AACrB,+DAAuBC,MAAM,CAACC,mBAAP,CAA2BF,MAA3B,CAAvB,wCAA2D;AAAA,gBAAlDG,UAAkD;;AACzD,gBACE,CAACA,UAAU,CAACC,UAAX,CAAsB,GAAtB,CAAD,IACA,CAACD,UAAU,CAACC,UAAX,CAAsB,WAAtB,CADD,IAEA,CAACb,6BAA6B,CAACc,GAA9B,CAAkCF,UAAlC,CAFD,IAGA,OAAOH,MAAM,CAACG,UAAD,CAAb,KAA8B,UAH9B,IAIA,MAAKA,UAAL,MAAqBG,SALvB,EAME;AACA,kBAAIN,MAAM,CAACG,UAAD,CAAN,CAAmBI,SAAvB,EAAkC;AAEhC,sBAAKJ,UAAL,IAAmBH,MAAM,CAACG,UAAD,CAAN,CAAmBK,IAAnB,CAAwBT,IAAxB,CAAnB;AACD,eAHD,MAGO;AACL,sBAAKI,UAAL,IAAmBH,MAAM,CAACG,UAAD,CAAzB;AACD;AACF;AACF;;AACDH,UAAAA,MAAM,GAAGC,MAAM,CAACQ,cAAP,CAAsBT,MAAtB,CAAT;AACD;AACF,OA9B+D;;AAAA;AAAA;;AAAA;AAAA;AAAA,aAgChE,kBAAS;AAAA;;AAEP,YAAMU,mBAAmB,GAAGT,MAAM,CAACU,IAAP,CAAY,KAAKC,KAAjB,EAAwBC,MAAxB,CAC1B,UAACD,KAAD,EAAQE,GAAR,EAAgB;AACd,cAAIrB,2BAA2B,CAACsB,OAA5B,CAAoCD,GAApC,MAA6C,CAAC,CAAlD,EAAqD;AACnDF,YAAAA,KAAK,CAACE,GAAD,CAAL,GAAa,MAAI,CAACF,KAAL,CAAWE,GAAX,CAAb;AACD;;AACD,iBAAOF,KAAP;AACD,SANyB,oBAOrBhB,MAPqB,EAA5B;AASA,eACE,6BAAC,iCAAD,6BAA8Bc,mBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACE,6BAAC,SAAD,6BAAe,KAAKE,KAApB;AAA2B,UAAA,GAAG,EAAE,KAAKd,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CADF;AAKD;AAhD+D;AAAA;AAAA,IACnCkB,eAAMrB,SAD6B;;AAC5DE,EAAAA,gBAD4D,CAEzDoB,SAFyD,qBAG3DtB,SAAS,CAACsB,SAHiD;AAC5DpB,EAAAA,gBAD4D,CAMzDqB,WANyD,GAM3CvB,SAAS,CAACuB,WAAV,IAAyB,kBANkB;AAkDlE,SAAOrB,gBAAP;AACD","sourcesContent":["import React from 'react';\r\n\r\nimport NativeViewGestureHandler from './NativeViewGestureHandler';\r\n\r\nconst NATIVE_WRAPPER_BIND_BLACKLIST = new Set(['replaceState', 'isMounted']);\r\n\r\n/*\r\n * This array should consist of:\r\n *   - All keys in propTypes from NativeGestureHandler\r\n *     (and all keys in GestureHandlerPropTypes)\r\n *   - 'onGestureHandlerEvent'\r\n *   - 'onGestureHandlerStateChange'\r\n */\r\nconst NATIVE_WRAPPER_PROPS_FILTER = [\r\n  'id',\r\n  'minPointers',\r\n  'enabled',\r\n  'waitFor',\r\n  'simultaneousHandlers',\r\n  'shouldCancelWhenOutside',\r\n  'hitSlop',\r\n  'onGestureEvent',\r\n  'onHandlerStateChange',\r\n  'onBegan',\r\n  'onFailed',\r\n  'onCancelled',\r\n  'onActivated',\r\n  'onEnded',\r\n  'shouldActivateOnStart',\r\n  'disallowInterruption',\r\n  'onGestureHandlerEvent',\r\n  'onGestureHandlerStateChange',\r\n];\r\n\r\nexport default function createNativeWrapper(Component, config = {}) {\r\n  class ComponentWrapper extends React.Component {\r\n    static propTypes = {\r\n      ...Component.propTypes,\r\n    };\r\n\r\n    static displayName = Component.displayName || 'ComponentWrapper';\r\n\r\n    _refHandler = node => {\r\n      // bind native component's methods\r\n      let source = node;\r\n      while (source != null) {\r\n        for (let methodName of Object.getOwnPropertyNames(source)) {\r\n          if (\r\n            !methodName.startsWith('_') && // private methods\r\n            !methodName.startsWith('component') && // lifecycle methods\r\n            !NATIVE_WRAPPER_BIND_BLACKLIST.has(methodName) && // other\r\n            typeof source[methodName] === 'function' &&\r\n            this[methodName] === undefined\r\n          ) {\r\n            if (source[methodName].prototype) {\r\n              // determine if it's not bound already\r\n              this[methodName] = source[methodName].bind(node);\r\n            } else {\r\n              this[methodName] = source[methodName];\r\n            }\r\n          }\r\n        }\r\n        source = Object.getPrototypeOf(source);\r\n      }\r\n    };\r\n\r\n    render() {\r\n      // filter out props that should be passed to gesture handler wrapper\r\n      const gestureHandlerProps = Object.keys(this.props).reduce(\r\n        (props, key) => {\r\n          if (NATIVE_WRAPPER_PROPS_FILTER.indexOf(key) !== -1) {\r\n            props[key] = this.props[key];\r\n          }\r\n          return props;\r\n        },\r\n        { ...config } // watch out not to modify config\r\n      );\r\n      return (\r\n        <NativeViewGestureHandler {...gestureHandlerProps}>\r\n          <Component {...this.props} ref={this._refHandler} />\r\n        </NativeViewGestureHandler>\r\n      );\r\n    }\r\n  }\r\n  return ComponentWrapper;\r\n}\r\n"]},"metadata":{},"sourceType":"script"}