{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"E:\\\\UTCH\\\\Cuatrimestre 4\\\\Dise\\xF1o de Apps\\\\reactNative\\\\actividad-10\\\\src\\\\screens\\\\HomeScreen\\\\HomeScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport styles from \"./styles\";\nimport { firebase } from \"../../firebase/config\";\nexport default function HomeScreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      tareaText = _useState2[0],\n      setTareaText = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tareas = _useState4[0],\n      setTareas = _useState4[1];\n\n  var tareaRef = firebase.firestore().collection('tareas');\n  var userID = props.extraData.id;\n  useEffect(function () {\n    tareaRef.where(\"authorID\", \"==\", userID).orderBy('createdAt', 'desc').onSnapshot(function (querySnapshot) {\n      var newTareas = [];\n      querySnapshot.forEach(function (doc) {\n        var tarea = doc.data();\n        tarea.id = doc.id;\n        newTareas.push(tarea);\n      });\n      setTareas(newTareas);\n    }, function (error) {\n      console.log(error);\n    });\n  }, []);\n\n  var onAddButtonPress = function onAddButtonPress() {\n    if (tareaText && tareaText.length > 0) {\n      var timestamp = firebase.firestore.FieldValue.serverTimestamp();\n      var data = {\n        texto: tareaText,\n        authorID: userID,\n        createdAt: timestamp\n      };\n      tareaRef.add(data).then(function (_doc) {\n        setTareaText('');\n        Keyboard.dismiss();\n      }).catch(function (error) {\n        alert(error);\n      });\n    }\n  };\n\n  var renderTarea = function renderTarea(_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    return React.createElement(View, {\n      style: styles.tareaContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.tareaText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, item.texto));\n  };\n\n  function cerrar() {\n    firebase.auth().signOut().then(function () {\n      alert(\"Vuelva pronto\");\n    }).catch(function (error) {\n      alert(error);\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onclick: \"cerrar()\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"Cerrar sesi\\xF3n\")), React.createElement(View, {\n    style: styles.formContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Agregar una nueva tarea\",\n    placeholderTextColor: \"#aaaaaa\",\n    onChangeText: function onChangeText(text) {\n      return setTareaText(text);\n    },\n    value: tareaText,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: onAddButtonPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, \"Agregar\"))), tareas && React.createElement(View, {\n    style: styles.listContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, React.createElement(FlatList, {\n    data: tareas,\n    renderItem: renderTarea,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    removeClippedSubviews: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  })));\n}","map":{"version":3,"sources":["E:/UTCH/Cuatrimestre 4/Diseño de Apps/reactNative/actividad-10/src/screens/HomeScreen/HomeScreen.js"],"names":["React","useEffect","useState","styles","firebase","HomeScreen","props","tareaText","setTareaText","tareas","setTareas","tareaRef","firestore","collection","userID","extraData","id","where","orderBy","onSnapshot","querySnapshot","newTareas","forEach","doc","tarea","data","push","error","console","log","onAddButtonPress","length","timestamp","FieldValue","serverTimestamp","texto","authorID","createdAt","add","then","_doc","Keyboard","dismiss","catch","alert","renderTarea","item","index","tareaContainer","cerrar","auth","signOut","container","button","buttonText","formContainer","input","text","listContainer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { FlatList, Keyboard, Text, TextInput, TouchableOpacity, View } from 'react-native'\r\nimport styles from './styles';\r\nimport { firebase } from '../../firebase/config'\r\n\r\nexport default function HomeScreen(props) {\r\n\r\n    const [tareaText, setTareaText] = useState('') //variable para crear una tarea\r\n    const [tareas, setTareas] = useState([]) //arregeloo de todas las tareas\r\n\r\n    const tareaRef = firebase.firestore().collection('tareas') //definimos la colleción\r\n    const userID = props.extraData.id //obtenemos el usuario conectado\r\n\r\n    useEffect(() => { //traemos todas las tareas del usuario conectado ordenados por fecha dexc\r\n        tareaRef\r\n            .where(\"authorID\", \"==\", userID)\r\n            .orderBy('createdAt', 'desc')\r\n            .onSnapshot(\r\n                querySnapshot => {\r\n                    const newTareas = [] //Creamos un arreglo auxiliar\r\n                    querySnapshot.forEach(doc => { //iteramos, extraemos los datos de la BD\r\n                        const tarea = doc.data()\r\n                        tarea.id = doc.id\r\n                        newTareas.push(tarea) //se recorre cada elemento y se agrega al arreglo newTareas\r\n                    });\r\n                    setTareas(newTareas) //Modificamos el estado de tareas con el arreglo newTareas\r\n                },\r\n                error => {\r\n                    console.log(error)\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    const onAddButtonPress = () => { //funcion para agregar tarea\r\n        if (tareaText && tareaText.length > 0) { //revisamos que no sea nulo\r\n            const timestamp = firebase.firestore.FieldValue.serverTimestamp(); //nos traemos la fecha y hora del servidor de firestor\r\n            //objeto tarea\r\n            const data = { //declaramos la siguiente estructura, que se almacenará en la bd\r\n                texto: tareaText, //texto de la tarea es igual a lo que capturamos\r\n                authorID: userID, //usuario logeado\r\n                createdAt: timestamp, //la fecha y hora\r\n            };\r\n\r\n            tareaRef\r\n                .add(data) // agregamos a tarea el objeto data construido previamente\r\n                .then(_doc => { //es una promesa, si se cumple entonces seguimos\r\n                    setTareaText('') //limipamos la variable, (eesta conectada con el input)\r\n                    Keyboard.dismiss()\r\n                })\r\n                .catch((error) => {\r\n                    alert(error)\r\n                });\r\n        }\r\n    }\r\n\r\n    const renderTarea = ({item, index}) => { //funcion que renderiza cada tarea, recibe dos parametros\r\n        return (//mostramos en un componente texto la tarea (item.texto) \r\n            <View style={styles.tareaContainer}>\r\n                <Text style={styles.tareaText}> \r\n                    {item.texto}\r\n                </Text>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    function cerrar(){\r\n        firebase.auth().signOut()\r\n        .then(function(){\r\n            alert(\"Vuelva pronto\");\r\n        })\r\n        .catch(function(error){\r\n            alert(error);\r\n        })\r\n    }\r\n\r\n    return ( //retornamos la vista un textInput que esta conectatdo a tareaText, setTareaText\r\n        <View style={styles.container}>\r\n            <TouchableOpacity style={styles.button} onclick=\"cerrar()\">\r\n                    <Text style={styles.buttonText}>Cerrar sesión</Text>\r\n                </TouchableOpacity>\r\n            <View style={styles.formContainer}>\r\n                \r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder='Agregar una nueva tarea'\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    onChangeText={(text) => setTareaText(text)}\r\n                    value={tareaText}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                <TouchableOpacity style={styles.button} onPress={onAddButtonPress}>\r\n                    <Text style={styles.buttonText}>Agregar</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            { tareas && (\r\n                <View style={styles.listContainer}>\r\n                    <FlatList\r\n                        data={tareas}\r\n                        renderItem={renderTarea}\r\n                        keyExtractor={(item) => item.id}\r\n                        removeClippedSubviews={true}\r\n                    />\r\n                </View>\r\n            )}\r\n        </View>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}