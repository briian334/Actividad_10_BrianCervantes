{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = HomeScreen;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _config = require(\"../../firebase/config\");\n\nvar _jsxFileName = \"E:\\\\UTCH\\\\Cuatrimestre 4\\\\Dise\\xF1o de Apps\\\\reactNative\\\\actividad-10\\\\src\\\\screens\\\\HomeScreen\\\\HomeScreen.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction HomeScreen(props, _ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      tareaText = _useState2[0],\n      setTareaText = _useState2[1];\n\n  var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      tareas = _useState4[0],\n      setTareas = _useState4[1];\n\n  var tareaRef = _config.firebase.firestore().collection('tareas');\n\n  var userID = props.extraData.id;\n  (0, _react.useEffect)(function () {\n    tareaRef.where(\"authorID\", \"==\", userID).orderBy('createdAt', 'desc').onSnapshot(function (querySnapshot) {\n      var newTareas = [];\n      querySnapshot.forEach(function (doc) {\n        var tarea = doc.data();\n        tarea.id = doc.id;\n        newTareas.push(tarea);\n      });\n      setTareas(newTareas);\n    }, function (error) {\n      console.log(error);\n    });\n  }, []);\n\n  var onAddButtonPress = function onAddButtonPress() {\n    if (tareaText && tareaText.length > 0) {\n      var timestamp = _config.firebase.firestore.FieldValue.serverTimestamp();\n\n      var data = {\n        texto: tareaText,\n        authorID: userID,\n        createdAt: timestamp\n      };\n      tareaRef.add(data).then(function (_doc) {\n        setTareaText('');\n\n        _reactNative.Keyboard.dismiss();\n      }).catch(function (error) {\n        alert(error);\n      });\n    }\n  };\n\n  var renderTarea = function renderTarea(_ref2) {\n    var item = _ref2.item,\n        index = _ref2.index;\n    return _react.default.createElement(_reactNative.View, {\n      style: _styles.default.tareaContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      style: _styles.default.tareaText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, item.texto));\n  };\n\n  var cerrar = function cerrar() {\n    _config.firebase.auth().signOut().then(function () {\n      alert(\"Saliendo...\");\n      window.location.href = window.location.href;\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  return _react.default.createElement(_reactNative.View, {\n    style: _styles.default.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: _styles.default.button,\n    onPress: cerrar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: _styles.default.buttonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, \"Cerrar sesi\\xF3n\")), _react.default.createElement(_reactNative.View, {\n    style: _styles.default.formContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.TextInput, {\n    style: _styles.default.input,\n    placeholder: \"Agregar una nueva tarea\",\n    placeholderTextColor: \"#aaaaaa\",\n    onChangeText: function onChangeText(text) {\n      return setTareaText(text);\n    },\n    value: tareaText,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }), _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: _styles.default.button,\n    onPress: onAddButtonPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: _styles.default.buttonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, \"Agregar\"))), tareas && _react.default.createElement(_reactNative.View, {\n    style: _styles.default.listContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_reactNative.FlatList, {\n    data: tareas,\n    renderItem: renderTarea,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    removeClippedSubviews: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  })));\n}","map":{"version":3,"sources":["E:/UTCH/Cuatrimestre 4/Dise√±o de Apps/reactNative/actividad-10/src/screens/HomeScreen/HomeScreen.js"],"names":["HomeScreen","props","navigation","tareaText","setTareaText","tareas","setTareas","tareaRef","firebase","firestore","collection","userID","extraData","id","where","orderBy","onSnapshot","querySnapshot","newTareas","forEach","doc","tarea","data","push","error","console","log","onAddButtonPress","length","timestamp","FieldValue","serverTimestamp","texto","authorID","createdAt","add","then","_doc","Keyboard","dismiss","catch","alert","renderTarea","item","index","styles","tareaContainer","cerrar","auth","signOut","window","location","href","container","button","buttonText","formContainer","input","text","listContainer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { FlatList, Keyboard, Text, TextInput, TouchableOpacity, View } from 'react-native'\r\nimport styles from './styles';\r\nimport { firebase } from '../../firebase/config'\r\n\r\nexport default function HomeScreen(props, {navigation}) {\r\n\r\n    const [tareaText, setTareaText] = useState('') //variable para crear una tarea\r\n    const [tareas, setTareas] = useState([]) //arregeloo de todas las tareas\r\n\r\n    const tareaRef = firebase.firestore().collection('tareas') //definimos la colleci√≥n\r\n    const userID = props.extraData.id //obtenemos el usuario conectado\r\n\r\n    useEffect(() => { //traemos todas las tareas del usuario conectado ordenados por fecha dexc\r\n        tareaRef\r\n            .where(\"authorID\", \"==\", userID)\r\n            .orderBy('createdAt', 'desc')\r\n            .onSnapshot(\r\n                querySnapshot => {\r\n                    const newTareas = [] //Creamos un arreglo auxiliar\r\n                    querySnapshot.forEach(doc => { //iteramos, extraemos los datos de la BD\r\n                        const tarea = doc.data()\r\n                        tarea.id = doc.id\r\n                        newTareas.push(tarea) //se recorre cada elemento y se agrega al arreglo newTareas\r\n                    });\r\n                    setTareas(newTareas) //Modificamos el estado de tareas con el arreglo newTareas\r\n                },\r\n                error => {\r\n                    console.log(error)\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    const onAddButtonPress = () => { //funcion para agregar tarea\r\n        if (tareaText && tareaText.length > 0) { //revisamos que no sea nulo\r\n            const timestamp = firebase.firestore.FieldValue.serverTimestamp(); //nos traemos la fecha y hora del servidor de firestor\r\n            //objeto tarea\r\n            const data = { //declaramos la siguiente estructura, que se almacenar√° en la bd\r\n                texto: tareaText, //texto de la tarea es igual a lo que capturamos\r\n                authorID: userID, //usuario logeado\r\n                createdAt: timestamp, //la fecha y hora\r\n            };\r\n\r\n            tareaRef\r\n                .add(data) // agregamos a tarea el objeto data construido previamente\r\n                .then(_doc => { //es una promesa, si se cumple entonces seguimos\r\n                    setTareaText('') //limipamos la variable, (eesta conectada con el input)\r\n                    Keyboard.dismiss()\r\n                })\r\n                .catch((error) => {\r\n                    alert(error)\r\n                });\r\n        }\r\n    }\r\n\r\n    const renderTarea = ({item, index}) => { //funcion que renderiza cada tarea, recibe dos parametros\r\n        return (//mostramos en un componente texto la tarea (item.texto) \r\n            <View style={styles.tareaContainer}>\r\n                <Text style={styles.tareaText}> \r\n                    {item.texto}\r\n                </Text>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    const cerrar  = () => { \r\n        firebase.auth().signOut()\r\n       \r\n        .then(() => {\r\n            alert(\"Saliendo...\");\r\n            window.location.href = window.location.href; //Cerrando sesi√≥n \r\n        })\r\n        .catch((error) => {\r\n            alert(error)\r\n        });\r\n        \r\n    }\r\n\r\n    return ( //retornamos la vista un textInput que esta conectatdo a tareaText, setTareaText\r\n        <View style={styles.container}>\r\n            <TouchableOpacity style={styles.button} onPress={cerrar}>\r\n                    <Text style={styles.buttonText}>Cerrar sesi√≥n</Text>\r\n                </TouchableOpacity>\r\n            <View style={styles.formContainer}>\r\n                \r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder='Agregar una nueva tarea'\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    onChangeText={(text) => setTareaText(text)}\r\n                    value={tareaText}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                <TouchableOpacity style={styles.button} onPress={onAddButtonPress}>\r\n                    <Text style={styles.buttonText}>Agregar</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            { tareas && (\r\n                <View style={styles.listContainer}>\r\n                    <FlatList\r\n                        data={tareas}\r\n                        renderItem={renderTarea}\r\n                        keyExtractor={(item) => item.id}\r\n                        removeClippedSubviews={true}\r\n                    />\r\n                </View>\r\n            )}\r\n        </View>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"script"}