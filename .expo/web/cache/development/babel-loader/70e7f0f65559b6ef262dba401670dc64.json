{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _ExecutionEnvironment = require(\"fbjs/lib/ExecutionEnvironment\");\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nvar initialURL = _ExecutionEnvironment.canUseDOM ? window.location.href : '';\nvar Linking = {\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  canOpenURL: function canOpenURL() {\n    return Promise.resolve(true);\n  },\n  getInitialURL: function getInitialURL() {\n    return Promise.resolve(initialURL);\n  },\n  openURL: function openURL(url) {\n    try {\n      open(url);\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  _validateURL: function _validateURL(url) {\n    (0, _invariant.default)(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);\n    (0, _invariant.default)(url, 'Invalid URL: cannot be empty');\n  }\n};\n\nvar open = function open(url) {\n  if (_ExecutionEnvironment.canUseDOM) {\n    window.location = new URL(url, window.location).toString();\n  }\n};\n\nvar _default = Linking;\nexports.default = _default;","map":{"version":3,"sources":["E:/UTCH/Cuatrimestre 4/Dise√±o de Apps/reactNative/actividad-10/node_modules/react-native-web/dist/exports/Linking/index.js"],"names":["initialURL","canUseDOM","window","location","href","Linking","addEventListener","removeEventListener","canOpenURL","Promise","resolve","getInitialURL","openURL","url","open","e","reject","_validateURL","URL","toString"],"mappings":";;;;;;;AASA;;AACA;;AACA,IAAIA,UAAU,GAAGC,kCAAYC,MAAM,CAACC,QAAP,CAAgBC,IAA5B,GAAmC,EAApD;AACA,IAAIC,OAAO,GAAG;AACZC,EAAAA,gBAAgB,EAAE,SAASA,gBAAT,GAA4B,CAAE,CADpC;AAEZC,EAAAA,mBAAmB,EAAE,SAASA,mBAAT,GAA+B,CAAE,CAF1C;AAGZC,EAAAA,UAAU,EAAE,SAASA,UAAT,GAAsB;AAChC,WAAOC,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;AACD,GALW;AAMZC,EAAAA,aAAa,EAAE,SAASA,aAAT,GAAyB;AACtC,WAAOF,OAAO,CAACC,OAAR,CAAgBV,UAAhB,CAAP;AACD,GARW;AASZY,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAC7B,QAAI;AACFC,MAAAA,IAAI,CAACD,GAAD,CAAJ;AACA,aAAOJ,OAAO,CAACC,OAAR,EAAP;AACD,KAHD,CAGE,OAAOK,CAAP,EAAU;AACV,aAAON,OAAO,CAACO,MAAR,CAAeD,CAAf,CAAP;AACD;AACF,GAhBW;AAiBZE,EAAAA,YAAY,EAAE,SAASA,YAAT,CAAsBJ,GAAtB,EAA2B;AACvC,4BAAU,OAAOA,GAAP,KAAe,QAAzB,EAAmC,2CAA2CA,GAA9E;AACA,4BAAUA,GAAV,EAAe,8BAAf;AACD;AApBW,CAAd;;AAuBA,IAAIC,IAAI,GAAG,SAASA,IAAT,CAAcD,GAAd,EAAmB;AAC5B,MAAIZ,+BAAJ,EAAe;AACbC,IAAAA,MAAM,CAACC,QAAP,GAAkB,IAAIe,GAAJ,CAAQL,GAAR,EAAaX,MAAM,CAACC,QAApB,EAA8BgB,QAA9B,EAAlB;AACD;AACF,CAJD;;eAMed,O","sourcesContent":["/**\r\n * Copyright (c) Nicolas Gallagher.\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\r\nimport invariant from 'fbjs/lib/invariant';\r\nvar initialURL = canUseDOM ? window.location.href : '';\r\nvar Linking = {\r\n  addEventListener: function addEventListener() {},\r\n  removeEventListener: function removeEventListener() {},\r\n  canOpenURL: function canOpenURL() {\r\n    return Promise.resolve(true);\r\n  },\r\n  getInitialURL: function getInitialURL() {\r\n    return Promise.resolve(initialURL);\r\n  },\r\n  openURL: function openURL(url) {\r\n    try {\r\n      open(url);\r\n      return Promise.resolve();\r\n    } catch (e) {\r\n      return Promise.reject(e);\r\n    }\r\n  },\r\n  _validateURL: function _validateURL(url) {\r\n    invariant(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);\r\n    invariant(url, 'Invalid URL: cannot be empty');\r\n  }\r\n};\r\n\r\nvar open = function open(url) {\r\n  if (canUseDOM) {\r\n    window.location = new URL(url, window.location).toString();\r\n  }\r\n};\r\n\r\nexport default Linking;"]},"metadata":{},"sourceType":"script"}